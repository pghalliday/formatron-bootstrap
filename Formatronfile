formatron.name 'formatron-bootstrap'
formatron.bucket 'formatron'

formatron.depends 'formatron-secrets'

secrets = config['secrets']

formatron.vpc 'vpc' do |vpc|
  vpc.guid 'vpcCDQ8SD1'
  vpc.cidr '10.0.0.0/16'

  vpc.subnet 'management' do |subnet|
    subnet.guid 'subnetFSW2KGDO'
    subnet.availability_zone 'a'
    subnet.cidr '10.0.0.0/24'

    subnet.acl do |acl|
      secrets['management_subnet']['source_cidrs'].each do |source_cidr|
        acl.source_cidr source_cidr
      end
    end

    subnet.bastion 'bastion' do |bastion|
      bastion.guid 'bastionH003WKT6'
      bastion.sub_domain config['bastion']['sub_domain']
      bastion.chef do |chef|
        chef.cookbook 'cookbooks/bastion_instance'
      end
    end

    subnet.nat 'nat' do |nat|
      nat.guid 'natH5DGYHFN'
      nat.sub_domain config['nat']['sub_domain']
      nat.chef do |chef|
        chef.cookbook 'cookbooks/nat_instance'
      end
    end

    subnet.chef_server 'chef_server' do |chef_server|
      chef_server.guid 'chefQ4U9YL6D'
      chef_server.version '12.2.0-1'
      chef_server.sub_domain config['chef_server']['sub_domain']
      chef_server.cookbooks_bucket config['chef_server']['cookbooks_bucket']
      chef_server.organization do |organization|
        organization.short_name config['chef_server']['organization']['short_name']
        organization.full_name config['chef_server']['organization']['full_name']
      end
      chef_server.username secrets['chef_server']['username']
      chef_server.email secrets['chef_server']['email']
      chef_server.first_name secrets['chef_server']['first_name']
      chef_server.last_name secrets['chef_server']['last_name']
      chef_server.password secrets['chef_server']['password']
      chef_server.ssl_key secrets['chef_server']['ssl']['key']
      chef_server.ssl_cert secrets['chef_server']['ssl']['cert']
      chef_server.ssl_verify config['chef_server']['ssl']['verify']
      chef_server.chef do |chef|
        chef.cookbook 'cookbooks/chef_server_instance'
      end
    end

    subnet.instance 'management_reverse_proxy' do |instance|
      instance.guid 'instance7DMRA54B'
      instance.sub_domain config['management_reverse_proxy']['sub_domain']
      instance.public_alias config['kibana']['sub_domain']
      instance.public_alias config['uchiwa']['sub_domain']
      instance.public_alias config['graphite']['sub_domain']
      instance.public_alias config['grafana']['sub_domain']
      instance.security_group do |security_group|
        security_group.open_tcp_port 80
        security_group.open_tcp_port 443
      end
      instance.chef do |chef|
        chef.cookbook 'cookbooks/management_reverse_proxy_instance'
      end
    end
  end

  vpc.subnet 'public' do |subnet|
    subnet.guid 'subnet7XC8S5X1'
    subnet.availability_zone 'a'
    subnet.cidr '10.0.1.0/24'
  end

  vpc.subnet 'private' do |subnet|
    subnet.guid 'subnetZ12IOPL5'
    subnet.availability_zone 'a'
    subnet.cidr '10.0.2.0/24'
    subnet.gateway 'nat'

    subnet.instance 'ldap' do |instance|
      instance.guid 'instanceDBBFJUM'
      instance.sub_domain config['ldap']['sub_domain']
      instance.chef do |chef|
        chef.cookbook 'cookbooks/ldap_instance'
      end
    end

    subnet.instance 'monitor' do |instance|
      instance.guid 'instanceS7TPNZJC'
      instance.instance_type 't2.medium'
      instance.sub_domain config['monitor']['sub_domain']
      instance.private_alias config['kibana']['sub_domain']
      instance.private_alias config['graphite']['sub_domain']
      instance.private_alias config['grafana']['sub_domain']
      instance.private_alias config['uchiwa']['sub_domain']
      instance.private_alias config['logstash']['sub_domain']
      instance.private_alias config['sensu']['sub_domain']
      instance.block_device do |block_device|
        block_device.device '/dev/sda1'
        block_device.size 100
        block_device.type 'gp2'
      end
      instance.chef do |chef|
        chef.cookbook 'cookbooks/monitor_instance'
      end
    end
  end
end
